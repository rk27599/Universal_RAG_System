# Security-First Pre-commit Configuration
# Ensures all commits maintain security compliance

repos:
  # Security validation using our custom validator
  - repo: local
    hooks:
      - id: security-validation
        name: Security Validation
        entry: python scripts/security_validator.py
        language: system
        pass_filenames: false
        always_run: true
        stages: [commit, push]

  # Python code quality and security
  - repo: https://github.com/psf/black
    rev: 23.11.0
    hooks:
      - id: black
        language_version: python3

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  - repo: https://github.com/pycqa/flake8
    rev: 6.1.0
    hooks:
      - id: flake8
        args: ["--max-line-length=88", "--extend-ignore=E203,W503"]

  # Security scanning
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        args: ["-r", "app/", "-f", "json", "-o", "bandit-report.json"]
        exclude: "tests/"

  # Secrets detection
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: package.lock.json

  # Configuration file validation
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-yaml
        exclude: "docker-compose.*\.yml"
      - id: check-json
      - id: check-toml
      - id: end-of-file-fixer
      - id: trailing-whitespace
      - id: check-merge-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']

  # Environment file security
  - repo: local
    hooks:
      - id: env-file-check
        name: Environment File Security Check
        entry: scripts/check_env_security.sh
        language: script
        files: "\.env.*"
        stages: [commit]

  # Database migration security
  - repo: local
    hooks:
      - id: db-migration-check
        name: Database Migration Security Check
        entry: scripts/check_migration_security.py
        language: python3
        files: "migrations/.*\.py"
        stages: [commit]

  # API endpoint security validation
  - repo: local
    hooks:
      - id: api-security-check
        name: API Security Validation
        entry: scripts/check_api_security.py
        language: python3
        files: "app/api/.*\.py"
        stages: [commit]

  # Docker security (if using containers)
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        files: "Dockerfile.*"

  # Dependency security scanning
  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check
        files: requirements.*\.txt

  # No external API calls validation
  - repo: local
    hooks:
      - id: external-api-check
        name: External API Call Prevention
        entry: scripts/check_external_apis.py
        language: python3
        files: "app/.*\.py"
        stages: [commit, push]

  # Local-only validation
  - repo: local
    hooks:
      - id: localhost-validation
        name: Localhost-Only Configuration Check
        entry: scripts/validate_localhost_only.py
        language: python3
        files: "(config|settings|\.env).*"
        stages: [commit]

# Global configuration
fail_fast: true
default_stages: [commit]

# Custom validation stages
stages:
  - commit
  - push
  - manual